#include <Wire.h>
#include <Adafruit_SSD1306.h>
#include <Adafruit_GFX.h>

// I2C OLED Pins (ESP32-S3)
#define I2C_SDA 13
#define I2C_SCL 14

// OLED Display Config
#define SCREEN_WIDTH 128
#define SCREEN_HEIGHT 64
Adafruit_SSD1306 display(SCREEN_WIDTH, SCREEN_HEIGHT, &Wire, -1);

// Sharp Distance Sensor 
#define SENSOR_PIN 16  
#define BUZZER_PIN 17  //  for the buzzer

// Threshold for obstacle detection 
#define OBSTACLE_THRESHOLD 1500  

void setup() {
  Serial.begin(115200);
  Wire.begin(I2C_SDA, I2C_SCL);

  pinMode(BUZZER_PIN, OUTPUT); //  buzzer as output
  digitalWrite(BUZZER_PIN, LOW); // buzzer is off initially

  // Initialize OLED DISPLAY
  if (!display.begin(SSD1306_SWITCHCAPVCC, 0x3C)) {
    Serial.println(F("SSD1306 allocation failed"));
    for (;;);
  }

  // initial message
  display.clearDisplay();
  display.setTextSize(2);
  display.setTextColor(SSD1306_WHITE);
  display.setCursor(1, 20);
  display.println("Starting..");
  display.display();
  delay(1000);
}

void loop() {
  int sensorValue = analogRead(SENSOR_PIN);  // Read sensor value
  Serial.print("Sensor Value: "); 
  Serial.println(sensorValue);  // Print value to Serial Monitor

  display.clearDisplay();
  display.setTextSize(2);
  display.setTextColor(SSD1306_WHITE);
  display.setCursor(10, 20);

  // Check if obstacle is detected
  if (sensorValue > OBSTACLE_THRESHOLD) {
    display.println("Oh, no!  Obstacle!");
    Serial.println("Obstacle detected!");
    
    // Activate the buzzer
    digitalWrite(BUZZER_PIN, HIGH); 
    delay(500); // Buzzer on for 500ms
    digitalWrite(BUZZER_PIN, LOW);
  } 
  else {
    display.println("Running..");
    Serial.println("No obstacle detected.");
  }

  display.display();
  delay(1000);  // Delay for stable readings
}
